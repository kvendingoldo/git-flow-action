name: "CI/CD pipeline"

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - main

env:
  image_name: git-flow-action

jobs:
  unit-tests:
    if: !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Run unit tests with coverage
        run: |
          pytest tests/unit/ -v --cov=src --cov-report=xml --cov-report=term-missing

      - name: Upload unit test coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true
          flags: unit-tests
          name: codecov-umbrella
          yml: ./codecov.yml

  functional-tests:
    if: !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-24.04
    needs: unit-tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -e .

      - name: Run functional tests
        run: |
          pytest tests/functional/ -v

  build:
    needs: [unit-tests, functional-tests]
    if: !contains(github.event.head_commit.message, '[skip ci]')
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Set application version
        id: set_version
        uses: kvendingoldo/git-flow-action@v2.0.2
        with:
          enable_github_release: true
          auto_release_branches: "main"
          tag_prefix_release: "v"
          github_token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Build docker image and push it
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            kvendingoldo/${{ env.image_name }}:latest
            kvendingoldo/${{ env.image_name }}:${{ steps.set_version.outputs.safe_version }}

